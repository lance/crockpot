/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a ZoneOffsetTransitionRule.
 */
class ZoneOffsetTransitionRule {
  /**
   * Create a ZoneOffsetTransitionRule.
   * @property {string} [month] Possible values include: 'JANUARY', 'FEBRUARY',
   * 'MARCH', 'APRIL', 'MAY', 'JUNE', 'JULY', 'AUGUST', 'SEPTEMBER', 'OCTOBER',
   * 'NOVEMBER', 'DECEMBER'
   * @property {string} [timeDefinition] Possible values include: 'UTC',
   * 'WALL', 'STANDARD'
   * @property {object} [standardOffset]
   * @property {number} [standardOffset.totalSeconds]
   * @property {string} [standardOffset.id]
   * @property {object} [standardOffset.rules]
   * @property {boolean} [standardOffset.rules.fixedOffset]
   * @property {array} [standardOffset.rules.transitions]
   * @property {array} [standardOffset.rules.transitionRules]
   * @property {object} [offsetBefore]
   * @property {number} [offsetBefore.totalSeconds]
   * @property {string} [offsetBefore.id]
   * @property {object} [offsetBefore.rules]
   * @property {boolean} [offsetBefore.rules.fixedOffset]
   * @property {array} [offsetBefore.rules.transitions]
   * @property {array} [offsetBefore.rules.transitionRules]
   * @property {object} [offsetAfter]
   * @property {number} [offsetAfter.totalSeconds]
   * @property {string} [offsetAfter.id]
   * @property {object} [offsetAfter.rules]
   * @property {boolean} [offsetAfter.rules.fixedOffset]
   * @property {array} [offsetAfter.rules.transitions]
   * @property {array} [offsetAfter.rules.transitionRules]
   * @property {string} [dayOfWeek] Possible values include: 'MONDAY',
   * 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', 'SUNDAY'
   * @property {number} [dayOfMonthIndicator]
   * @property {object} [localTime]
   * @property {number} [localTime.hour]
   * @property {number} [localTime.minute]
   * @property {number} [localTime.second]
   * @property {number} [localTime.nano]
   * @property {boolean} [midnightEndOfDay]
   */
  constructor() {
  }

  /**
   * Defines the metadata of ZoneOffsetTransitionRule
   *
   * @returns {object} metadata of ZoneOffsetTransitionRule
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ZoneOffsetTransitionRule',
      type: {
        name: 'Composite',
        className: 'ZoneOffsetTransitionRule',
        modelProperties: {
          month: {
            required: false,
            serializedName: 'month',
            type: {
              name: 'String'
            }
          },
          timeDefinition: {
            required: false,
            serializedName: 'timeDefinition',
            type: {
              name: 'String'
            }
          },
          standardOffset: {
            required: false,
            serializedName: 'standardOffset',
            type: {
              name: 'Composite',
              className: 'ZoneOffset'
            }
          },
          offsetBefore: {
            required: false,
            serializedName: 'offsetBefore',
            type: {
              name: 'Composite',
              className: 'ZoneOffset'
            }
          },
          offsetAfter: {
            required: false,
            serializedName: 'offsetAfter',
            type: {
              name: 'Composite',
              className: 'ZoneOffset'
            }
          },
          dayOfWeek: {
            required: false,
            serializedName: 'dayOfWeek',
            type: {
              name: 'String'
            }
          },
          dayOfMonthIndicator: {
            required: false,
            serializedName: 'dayOfMonthIndicator',
            type: {
              name: 'Number'
            }
          },
          localTime: {
            required: false,
            serializedName: 'localTime',
            type: {
              name: 'Composite',
              className: 'LocalTime'
            }
          },
          midnightEndOfDay: {
            required: false,
            serializedName: 'midnightEndOfDay',
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = ZoneOffsetTransitionRule;
